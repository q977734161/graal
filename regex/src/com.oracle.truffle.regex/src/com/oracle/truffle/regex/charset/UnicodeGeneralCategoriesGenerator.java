/*
 * Copyright (c) 2019, 2019, Oracle and/or its affiliates. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA
 * or visit www.oracle.com if you need additional information or have any
 * questions.
 */
package com.oracle.truffle.regex.charset;

import java.util.Arrays;

public class UnicodeGeneralCategoriesGenerator {

    public static void main(String[] args) {
        // The following aggregate general categories are defined in Unicode Standard Annex 44,
        // Section 5.7.1. (http://www.unicode.org/reports/tr44/#GC_Values_Table).
        String[][] generalCategories = new String[][]{
                        {"gc=LC", "Lu", "Ll", "Lt"},
                        {"gc=L", "Lu", "Ll", "Lt", "Lm", "Lo"},
                        {"gc=M", "Mn", "Mc", "Me"},
                        {"gc=N", "Nd", "Nl", "No"},
                        {"gc=P", "Pc", "Pd", "Ps", "Pe", "Pi", "Pf", "Po"},
                        {"gc=S", "Sm", "Sc", "Sk", "So"},
                        {"gc=Z", "Zs", "Zl", "Zp"},
                        {"gc=C", "Cc", "Cf", "Cs", "Co", "Cn"}
        };
        System.out.println(String.format("/*\n" +
                        " * Copyright (c) 2019, 2019, Oracle and/or its affiliates. All rights reserved.\n" +
                        " * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n" +
                        " *\n" +
                        " * This code is free software; you can redistribute it and/or modify it\n" +
                        " * under the terms of the GNU General Public License version 2 only, as\n" +
                        " * published by the Free Software Foundation.  Oracle designates this\n" +
                        " * particular file as subject to the \"Classpath\" exception as provided\n" +
                        " * by Oracle in the LICENSE file that accompanied this code.\n" +
                        " *\n" +
                        " * This code is distributed in the hope that it will be useful, but WITHOUT\n" +
                        " * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n" +
                        " * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n" +
                        " * version 2 for more details (a copy is included in the LICENSE file that\n" +
                        " * accompanied this code).\n" +
                        " *\n" +
                        " * You should have received a copy of the GNU General Public License version\n" +
                        " * 2 along with this work; if not, write to the Free Software Foundation,\n" +
                        " * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.\n" +
                        " *\n" +
                        " * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA\n" +
                        " * or visit www.oracle.com if you need additional information or have any\n" +
                        " * questions.\n" +
                        " */\n" +
                        "package com.oracle.truffle.regex.charset;\n" +
                        "\n" +
                        "import org.graalvm.collections.EconomicMap;\n" +
                        "\n" +
                        "/**\n" +
                        " * Generated by {@link UnicodeGeneralCategoriesGenerator}.\n" +
                        " */\n" +
                        "class UnicodeGeneralCategories {\n" +
                        "\n" +
                        "    private static final EconomicMap<String, CodePointSet> GENERAL_CATEGORIES = EconomicMap.create(%d);\n" +
                        "\n" +
                        "    static CodePointSet getGeneralCategory(String name) {\n" +
                        "        return GENERAL_CATEGORIES.get(name);\n" +
                        "    }\n" +
                        "\n" +
                        "    static {", generalCategories.length));
        for (String[] category : generalCategories) {
            String name = category[0];
            String[] props = Arrays.copyOfRange(category, 1, category.length);
            System.out.println(String.format("        GENERAL_CATEGORIES.put(\"%s\", CodePointSet.createNoDedup(%s));", name, unionOfGeneralCategories(props).dumpRaw()));
        }
        System.out.println("    }");
        System.out.println("}");
    }

    /**
     * @param generalCategoryNames *Abbreviated* names of general categories
     */
    private static CodePointSet unionOfGeneralCategories(String... generalCategoryNames) {
        CodePointSet set = CodePointSet.getEmpty();
        for (String generalCategoryName : generalCategoryNames) {
            set = set.union(UnicodePropertyData.retrieveProperty("gc=" + generalCategoryName));
        }
        return set;
    }
}
